@model DEV_3.Model._AccountViewModel

@{Layout = "~/Views/Shared/PersonDashboard.cshtml";}



@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>_AccountViewModel</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.code)

        <div class="form-group">
            @Html.LabelFor(model => model.per_code, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.per_code, new { htmlAttributes = new { @class = "form-control", @ReadOnly = true } })
                @Html.ValidationMessageFor(model => model.per_code, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.account_number, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.account_number, new { htmlAttributes = new { @class = "form-control", @ReadOnly = true } })
                @Html.ValidationMessageFor(model => model.account_number, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.outstanding_balance, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.outstanding_balance, new { htmlAttributes = new { @class = "form-control", @ReadOnly = true } })
                @Html.ValidationMessageFor(model => model.outstanding_balance, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.status, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.status, new { htmlAttributes = new { @class = "form-control", @ReadOnly = true } })
                @Html.ValidationMessageFor(model => model.status, "", new { @class = "text-danger" })
            </div>
        </div>

        @if (ViewBag.StatusId == 1)
        {
            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Activate" class="btn btn-primary" />
                </div>
            </div>
        }
        else if (ViewBag.StatusId == 0)
        {
            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Deactivate" class="btn btn-danger" />
                </div>
            </div>}
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>
